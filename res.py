import os
import pdfplumber
from groq import Groq

# Set up the Groq API client with your API key
client = Groq(
    api_key="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",  # Replace this with your actual API key
)

def extract_text_from_pdf(pdf_path):
    """
    Extracts text from a PDF file.
    Args:
        pdf_path (str): Path to the PDF file.
    Returns:
        str: Extracted text from the PDF.
    """
    text = ""
    try:
        with pdfplumber.open(pdf_path) as pdf:
            for page in pdf.pages:
                page_text = page.extract_text()
                if page_text:
                    text += page_text + "\n"
    except Exception as e:
        print(f"Error extracting text from PDF: {e}")
        return None
    
    return text if text.strip() else None

def get_resume_feedback(resume_text, job_description):
    """
    Send the resume text and job description to LLaMA 3 model via Groq API to get feedback.
    Args:
        resume_text (str): Extracted resume text.
        job_description (str): Job description provided by the user.
    Returns:
        str: Feedback generated by LLaMA model.
    """
    prompt = f"""
    Analyze the following resume based on its suitability for the provided job description.
    
    Resume Text:
    {resume_text}
    
    Job Description:
    {job_description}
    
    Provide specific, constructive feedback on areas of improvement for the resume to align better with the job description, including missing skills, experience alignment, and formatting suggestions if needed.
    """
    
    # Generate feedback using Groq's chat completion feature
    try:
        chat_completion = client.chat.completions.create(
            messages=[
                {"role": "user", "content": prompt}
            ],
            model="llama3-8b-8192",  # Ensure model name matches the one supported by Groq
        )
        return chat_completion.choices[0].message.content
    except Exception as e:
        print(f"Error getting feedback from LLaMA: {e}")
        return None

def main():
    # Provide the PDF path and job description directly here
    pdf_path = "C:\\sample res\\sample_res.pdf"
    job_description = """
    Graphic Designer - Job Description
    Responsibilities:
    - Develop visually appealing graphics and layouts for digital and print media.
    - Collaborate with team members to ensure designs align with brand standards.
    - Create illustrations, logos, and other designs using software like Adobe Illustrator, Photoshop, and InDesign.
    - Adapt designs for various platforms, including social media, websites, and presentations.
    Requirements:
    - Bachelor's degree in Graphic Design or related field.
    - 2+ years of experience in graphic design.
    - Proficiency in Adobe Creative Suite (Photoshop, Illustrator, InDesign).
    - Strong portfolio demonstrating creativity, design skills, and attention to detail.
    - Excellent communication and team collaboration skills.
    - Ability to work under tight deadlines.
    """
    
    # Extract resume text
    resume_text = extract_text_from_pdf(pdf_path)
    if resume_text is None:
        print("Could not process the resume. Please check the file path and try again.")
        return

    # Get feedback from LLaMA through Groq API
    feedback = get_resume_feedback(resume_text, job_description)
    if feedback:
        print("\nResume Feedback:")
        print(feedback)
    else:
        print("Failed to get feedback. Please try again later.")

if __name__ == "__main__":
    main()
